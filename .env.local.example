# External APIs Configuration
# Format: API_NAME_PARAMETER_NAME=value

# Parameter: GOOGLE_OAUTH_CLIENT_ID
# To obtain Google OAuth Client ID:
# 
# 1. Go to the Google Cloud Console (https://console.cloud.google.com/)
# 2. Create a new project or select an existing one
# 3. Navigate to 'APIs & Services' > 'Credentials'
# 4. Click 'Create Credentials' > 'OAuth 2.0 Client IDs'
# 5. Select 'Web application' as the application type
# 6. Add your authorized redirect URIs (see GOOGLE_OAUTH_REDIRECT_URIS
# configuration)
# 7. Click 'Create'
# 8. Copy the Client ID from the created OAuth 2.0 client
GOOGLE_OAUTH_CLIENT_ID=INSERT_YOUR_VALUE_HERE

# Parameter: GOOGLE_OAUTH_CLIENT_SECRET
# To obtain Google OAuth Client Secret:
# 
# 1. Follow the same steps as for Client ID above
# 2. After creating the OAuth 2.0 client, copy the Client Secret from the
# credentials page
# 3. Keep this secret secure and never commit it to version control
GOOGLE_OAUTH_CLIENT_SECRET=INSERT_YOUR_VALUE_HERE

# Parameter: GOOGLE_OAUTH_REDIRECT_URIS
# Configure the redirect URIs for Google OAuth:
# 
# 1. In the Google Cloud Console, go to your OAuth 2.0 client settings
# 2. Add the following URIs to 'Authorized redirect URIs':
# - For local development: http://localhost:8000/accounts/google/login/callback/
# - For local development: http://127.0.0.1:8000/accounts/google/login/callback/
#    - For production: https://yourdomain.com/accounts/google/login/callback/
# 3. Save the changes
# 4. Use the same URIs in this configuration parameter
GOOGLE_OAUTH_REDIRECT_URIS=http://localhost:8000/accounts/google/login/callback/,http://127.0.0.1:8000/accounts/google/login/callback/

# HTTPS Configuration
# Set USE_TLS=true when deploying to production with HTTPS
# This ensures OAuth redirects use HTTPS URLs instead of HTTP
USE_TLS=false

# Set SECURE_SSL_REDIRECT=true to automatically redirect HTTP to HTTPS in production
# Only enable this when your production server has SSL/TLS properly configured
SECURE_SSL_REDIRECT=false

# Production domain settings (uncomment and configure for production)
# ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com
# CSRF_TRUSTED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com